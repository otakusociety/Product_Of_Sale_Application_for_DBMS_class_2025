{
    "swagger": "2.0",
  "info": {
    "title": "POS API",
    "version": "1.0.0",
    "description": "A simple API for managing products in a Point of Sale system",
    "contact": {
      "name": "Abrokwa Seth Kwaku- ANU23400065- computer engineering",
      "email": "sethseniorabrokwa@gmail.com",
      "url": "https://github.com/otakusociety"
    }
  },
  "paths": {
    "/api/products": {
      "get": {
        "summary": "Get all products",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "List of products"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Add a new product",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "stock": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/products/{id}": {
      "put": {
        "summary": "Update an existing product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "stock": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Product ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/products/search": {
      "get": {
        "summary": "Search products by name",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "description": "Product name to search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching products"
          },
          "400": {
            "description": "Missing name query parameter"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "summary": "Filter products by price range",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "query",
            "name": "minPrice",
            "required": false,
            "description": "Minimum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "maxPrice",
            "required": false,
            "description": "Maximum price",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of filtered products"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
